name: build docker image

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag for the Docker image (e.g., v1.2.3)'
        required: true
        default: 'latest'

permissions:
  contents: read
  packages: write

jobs:
  build-test-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t unpast:${{ github.event.inputs.tag }} .
          if [ "${{ github.event.inputs.tag }}" != "latest" ]; then
            docker tag unpast:${{ github.event.inputs.tag }} unpast:latest
          fi
      
      - name: Set up results directory with permissions
        run: |
          mkdir -p results
          chmod -R 777 results
      
      - name: Run tests inside Docker container
        run: |
          docker run \
            --rm \
            --entrypoint "" \
            unpast:${{ github.event.inputs.tag }} \
            bash -c "\
              poetry run pytest -m 'not slow' && \
              poetry run pytest \
            "

      - name: Run unpast command inside Docker container
        run: |
          docker run \
            --rm \
            -v "${{ github.workspace }}/results":/app/results \
            unpast:${{ github.event.inputs.tag }} \
              --exprs unpast/tests/scenario_B500.exprs.tsv.gz \
              --basename results/scenario_B500 --verbose \
          
   
      - name: Verify Output
        run: |
          ls -l results
          OUTPUT_FILE=$(ls results/scenario_B500*_*biclusters.tsv)
          if [ ! -s "$OUTPUT_FILE" ]; then
            echo "Test failed: Output file is missing or empty"
            exit 1
          fi
  
      - name: Push Docker images to Docker Hub
        if: ${{ success() }}
        run: |
          docker tag unpast:${{ github.event.inputs.tag }} ${{ secrets.DOCKERHUB_USERNAME }}/unpast:${{ github.event.inputs.tag }}
          if [ "${{ github.event.inputs.tag }}" != "latest" ]; then
            docker tag unpast:latest ${{ secrets.DOCKERHUB_USERNAME }}/unpast:latest
          fi
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/unpast:${{ github.event.inputs.tag }}
          if [ "${{ github.event.inputs.tag }}" != "latest" ]; then
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/unpast:latest
          fi
